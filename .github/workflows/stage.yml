name: Validate and stage release

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: The version to publish
        required: true
      publish_github:
        description: 'Create draft GitHub release'
        default: true
        type: boolean
      publish_maven:
        description: 'Create Maven release'
        default: true
        type: boolean
      skip_validation:
        description: 'Skip version validations'
        default: false
        type: boolean

jobs:
  stage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Install required software
        run: |
          sudo apt install xmlstarlet
      - name: Get project settings
        run: |
          shortname=$(xmlstarlet sel -N x="http://maven.apache.org/POM/4.0.0" -t -v "//x:project/x:artifactId/text()" pom.xml)
          version=$(xmlstarlet sel -N x="http://maven.apache.org/POM/4.0.0" -t -v "//x:project/x:version/text()" pom.xml)
          echo "BUILD_NAME=${shortname}" >> $GITHUB_ENV
          echo "BUILD_VERSION=${version}" >> $GITHUB_ENV
          echo "BUILD_ARTIFACT=${shortname}-${version}" >> $GITHUB_ENV
      - name: Validate version number
        if: ${{ ! inputs.skip_validation }}
        run: |
          [ "${{ inputs.version }}" == "${BUILD_VERSION}" ] || (>&2 echo "Version does not match value in pom.xml"; exit -1)
          [ "${{ inputs.version }}" == "$(cat README.md | grep -m 1 '<version>' | tr -d '<>/[:alpha:][:space:]')" ] || (>&2 echo "Version does not match value in README.md"; exit -1)
      - name: Build and stage Maven artifacts
        if: ${{ inputs.publish_maven }}
        run: |
          mvn --batch-mode deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Stage GitHub release
        if: ${{ inputs.publish_github }}
        run: |
          gh release create "v${{ inputs.version }}" --draft --title "Version ${{ inputs.version }}" \
              target/${BUILD_ARTIFACT}.jar \
              $([ -f "target/${BUILD_ARTIFACT}-jar-with-dependencies.jar" ] && echo "target/${BUILD_ARTIFACT}-jar-with-dependencies.jar" || echo "")
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Release artifacts
          path: target/*.jar
